[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "crypto-analytics"
version = "0.1.0"
description = "Comprehensive cryptocurrency data analysis with ML and LLM integration"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Crypto Analytics Team"}
]
keywords = ["cryptocurrency", "analytics", "machine learning", "llm"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.7",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "openai>=1.0.0",
    "anthropic>=0.3.0",
    "scikit-learn>=1.3.0",
    "flask>=2.3.0",
    "flask-sqlalchemy>=3.0.0",
    "flask-cors>=4.0.0",
    "beautifulsoup4>=4.12.0",
    "selenium>=4.15.0",
    "scrapy>=2.11.0",
    "schedule>=1.2.0",
    "click>=8.1.0",
    "loguru>=0.7.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]
ml = [
    "transformers>=4.30.0",
]

[project.urls]
"Homepage" = "https://github.com/your-username/crypto-analytics"
"Bug Reports" = "https://github.com/your-username/crypto-analytics/issues"
"Source" = "https://github.com/your-username/crypto-analytics"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --disable-warnings"